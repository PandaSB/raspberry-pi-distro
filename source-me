#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR"

MACHINE="$1"


BUILD_DIR="$DIR/build"

if [ -z "$MACHINE" ]; then
  echo "Machine name is missing" 1>&2
  echo "Machines:" 1>&2
  echo "$(find $DIR/meta-raspberrypi/conf/machine/ -name *.conf  -type f -printf "%f\n" | cut -f 1 -d '.')" 1>&2
else
  #Create build environment
  . "$DIR/poky/oe-init-build-env" "$BUILD_DIR" > /dev/null 

  echo '' >> "$BUILD_DIR/conf/bblayers.conf"
  echo "# RPI
BBLAYERS += \" \\
  $DIR/meta-openembedded/meta-oe \\
  $DIR/meta-openembedded/meta-python \\
  $DIR/meta-openembedded/meta-perl \\
  $DIR/meta-openembedded/meta-multimedia \\
  $DIR/meta-openembedded/meta-networking \\
  $DIR/meta-qt5 \\
  $DIR/meta-raspberrypi \\
  $DIR/meta-security \\
  $DIR/meta-maker \\
  $DIR/meta-rpi \\
  $DIR/meta-sb \\
  \"" >> "$BUILD_DIR/conf/bblayers.conf"

  echo '' >> "$BUILD_DIR/conf/local.conf"
  echo "# RPI
LICENSE_FLAGS_WHITELIST = \"commercial\"
DISTRO_FEATURES = \"ext2 pam opengl usbhost \${DISTRO_FEATURES_LIBC}\"
DISTRO_FEATURES_BACKFILL_CONSIDERED += \"pulseaudio\"
PREFERRED_PROVIDER_jpeg = \"libjpeg-turbo\"
PREFERRED_PROVIDER_jpeg-native = \"libjpeg-turbo-native\"
PREFERRED_PROVIDER_udev = \"eudev\"
VIRTUAL-RUNTIME_init_manager = \"sysvinit\"
MACHINE_FEATURES_remove = \"apm\"
IMAGE_FSTYPES = \"tar.xz\"
# override the meta-raspberrypi default 4.9 kernel
PREFERRED_VERSION_linux-raspberrypi = \"4.14.%\"
KERNEL_IMAGETYPE = \"zImage\"
ENABLE_UART=\"1\"
MACHINE = \"$MACHINE\"
DISTRO = \"poky\"
PACKAGE_CLASSES = \"package_ipk\"
# i686 or x86_64
SDKMACHINE = \"x86_64\"
#EXTRA_IMAGE_FEATURES = \"debug-tweaks\"
INHERIT += \"extrausers\"
EXTRA_USERS_PARAMS = \"usermod -P jumpnowtek root; \"
USER_CLASSES = \"image-mklibs image-prelink\"
PATCHRESOLVE = \"noop\"
RM_OLD_IMAGE = \"1\"
INHERIT += \"rm_work\"
WIFI_SSID=\"TEST\"
WIFI_PASSWD=\"testpasswd\"
#INITRAMFS_IMAGE = \"\"
#INITRAMFS_IMAGE_BUNDLE = \"1\"
#INITRAMFS_FSTYPES = \"cpio.gz\"
#IMAGE_FSTYPES = \"${INITRAMFS_FSTYPES}\"
#INITRAMFS_MAXSIZE = \"180000\"

  " >> "$BUILD_DIR/conf/local.conf"
  echo "SSTATE_DIR = \"$DIR/sstate-cache\"" >> "$BUILD_DIR/conf/local.conf"
  echo "DL_DIR = \"$DIR/downloads\"" >> "$BUILD_DIR/conf/local.conf"

    echo "Run 'bitbake <target>'"
    echo "Images:"
    echo "$(find $DIR/meta-rpi/images/ -name *.bb  -type f -printf "%f\n" | cut -f 1 -d '.')"
    echo "$(find $DIR/meta-sb/recipes-core/images/ -name *.bb  -type f -printf "%f\n" | cut -f 1 -d '.')"

fi
